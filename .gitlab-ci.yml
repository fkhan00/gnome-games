stages:
  - build
  - test
  - review
  - cross_distro

variables:
  BUNDLE: "gnome-games-git.flatpak"

flatpak:tests:
  image: registry.gitlab.gnome.org/gnome/gnome-runtime-images/gnome:master
  stage: test
  variables:
    MANIFEST_PATH: "flatpak/org.gnome.Games.UnitTests.json"
  script:
    - flatpak-builder unit-tests ${MANIFEST_PATH}
    - xvfb-run -a -s "-screen 0 1024x768x24" flatpak-builder --run unit-tests ${MANIFEST_PATH} games-unit-tests
  cache:
    paths:
      - .flatpak-builder/cache/

flatpak:app:
  image: registry.gitlab.gnome.org/gnome/gnome-runtime-images/gnome:master
  stage: build
  variables:
    MANIFEST_PATH: "flatpak/org.gnome.Games.json"
    RUNTIME_REPO: "https://sdk.gnome.org/gnome-nightly.flatpakrepo"
    FLATPAK_MODULE: "gnome-games"
  script:
    - flatpak-builder --stop-at=${FLATPAK_MODULE} app ${MANIFEST_PATH}
    - flatpak build app meson --prefix=/app -Dprofile=development ${MESON_ARGS} _build
    - flatpak build app ninja -C _build install
    - flatpak build app mkdir -p /app/lib/libretro/extra.d
    - flatpak-builder --finish-only --repo=repo app ${MANIFEST_PATH}
    - flatpak build-bundle repo ${BUNDLE} --runtime-repo=${RUNTIME_REPO} org.gnome.GamesDevel

  artifacts:
    paths:
      - ${BUNDLE}
      - _build/meson-logs/meson-log.txt
    expire_in: 30 days
  cache:
    paths:
      - .flatpak-builder/cache/

review:
  stage: review
  dependencies:
    - flatpak:app
    - flatpak:tests
  script:
    - echo "Generating flatpak deployment"
  artifacts:
    paths:
      - ${BUNDLE}
    expire_in: 30 days
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: https://gitlab.gnome.org/$CI_PROJECT_PATH/-/jobs/$CI_JOB_ID/artifacts/raw/${BUNDLE}
    on_stop: stop_review
  except:
    - master@GNOME/gnome-games
    - tags

stop_review:
  stage: review
  script:
    - echo "Stopping flatpak deployment"
  when: manual
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop
  except:
    - master@GNOME/gnome-games
    - tags

fedora:29:
  image: fedora:29
  stage: cross_distro
  before_script:
    - dnf update -y
    # libmanette, retro-gtk and gnome-games aren't in Fedora repos, so we
    # cannot simply do `dnf builddep -y libmanette retro-gtk gnome-games`
    - dnf install -y redhat-rpm-config git vala meson libevdev-devel libepoxy-devel
                     gtk4-devel pulseaudio-libs-devel grilo-devel librsvg2-devel
                     libsoup-devel sqlite-devel tracker-devel libarchive-devel
    - bash -x ./.gitlab-ci/prepare.sh
  script:
    - bash -x ./.gitlab-ci/build.sh

ubuntu:devel:
  image: ubuntu:devel
  stage: cross_distro
  before_script:
    - apt-get update
    - apt-get install -y git
    - apt-get build-dep -y libmanette retro-gtk gnome-games-app
    - bash -x ./.gitlab-ci/prepare.sh
  script:
    - bash -x ./.gitlab-ci/build.sh
